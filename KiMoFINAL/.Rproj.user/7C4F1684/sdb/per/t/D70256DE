{
    "contents" : "#ALT ALIGN SCRIPT - calculates conservation score as number of most frequent amino acid and mutation score is per kinase - need to edit table to only include regions with conservation score above 19\nSTK11 <- read.csv ( file = 'top30/STK11.csv')\nMAP2K4 <- read.csv ( file = 'top30/MAP2K4.csv')\nBMPR2 <- read.csv ( file = 'top30/BMPR2.csv')\nACVR2A <- read.csv ( file = 'top30/ACVR2A.csv')\nTSSK1B <- read.csv ( file = 'top30/TSSK1B.csv')\nSTK32A <- read.csv ( file = 'top30/STK32A.csv')\nSTK24 <- read.csv ( file = 'top30/STK24.csv')\nCSNK1A1 <- read.csv ( file = 'top30/CSNK1A1.csv')\nMAP3K19 <- read.csv ( file = 'top30/MAP3K19.csv')\nNEK5 <- read.csv ( file = 'top30/NEK5.csv')\nCSNK1G3 <- read.csv ( file = 'top30/CSNK1G3.csv')\nCHEK2 <- read.csv ( file = 'top30/CHEK2.csv')\nMAP3K1 <- read.csv ( file = 'top30/MAP3K1.csv')\nMAP3K12 <- read.csv ( file = 'top30/MAP3K12.csv')\nRIPK3 <- read.csv ( file = 'top30/RIPK3.csv')\nDYRK3 <- read.csv ( file = 'top30/DYRK3.csv')\nNIM1K <- read.csv ( file = 'top30/NIM1K.csv')\nLATS1 <- read.csv ( file = 'top30/LATS1.csv')\nFER <- read.csv ( file = 'top30/FER.csv')\nEPHA5 <- read.csv ( file = 'top30/EPHA5.csv')\nCSNK2A1 <- read.csv ( file = 'top30/CSNK2A1.csv')\nTGFBR2 <- read.csv ( file = 'top30/TGFBR2.csv')\nNEK11 <- read.csv ( file = 'top30/NEK11.csv')\nBRSK1 <- read.csv ( file = 'top30/BRSK1.csv')\nEPHA7 <- read.csv ( file = 'top30/EPHA7.csv')\nPRKG2 <- read.csv ( file = 'top30/PRKG2.csv')\nPAK7 <- read.csv ( file = 'top30/PAK7.csv')\nAMHR2 <- read.csv ( file = 'top30/AMHR2.csv')\nGSK3B <- read.csv ( file = 'top30/GSK3B.csv')\nCDKL3 <- read.csv ( file = 'top30/CDKL3.csv')\n\n\nTOP30 <- rbind (STK11, MAP2K4, BMPR2, ACVR2A, TSSK1B, STK32A, STK24, CSNK1A1, MAP3K19, NEK5, CSNK1G3, CHEK2, MAP3K1, MAP3K12, RIPK3, DYRK3, NIM1K, LATS1, FER, EPHA5, CSNK2A1, TGFBR2, NEK11, BRSK1, EPHA7, PRKG2, PAK7, AMHR2, GSK3B, CDKL3)\nwrite.csv (TOP30, file='TEMP_TOP30.csv')\n\n#merge with genbank to get location of start of Catalytic frag\nTOP30 <- merge(TOP30, genbankkinases, by = 'Gene')\n\n#work out protein location of frag location\nTOP30$Codon <- TOP30$Old_Loc + TOP30$loc_actual_gxg - 1\n\n#MERGE WITH CCLE MUTATION DATA\nCCLE    <- read.csv ( file = 'SOURCE_ccletrimmed_namechanged_HRT18removed_HEC1Bremoved.csv')\nCCLE = subset(CCLE, mutation_type == 'Missense_Mutation')\nCCLE$Ref <- str_extract(CCLE$amino_acid_change, \"[A-Z]\")\nCCLE$Codon <- str_extract(CCLE$amino_acid_change, \"[0-9]+\")\n\nmergedccle <- merge(CCLE, TOP30, by = c('Gene', 'Codon', 'Ref') )\nmergedccle$pastedref <- paste(mergedccle$Gene, mergedccle$Codon, mergedccle$Tumor_Sample_Barcode, sep = \"_\" )\nmergedccle$DUP= !duplicated(mergedccle$pastedref)\nmergedccle <- subset(mergedccle, DUP == 'TRUE')\n\nwrite.csv (mergedccle, file='outputs/TEMP_merged_align_ccle.csv')\n\n#look for number of kinases altered per codon\nmergedccle$pastedref2 <- paste(mergedccle$Align_Loc, mergedccle$Gene, sep = \"_\" )\nmergedccle$DUP= !duplicated(mergedccle$pastedref2)\nmergedcclepk <- subset(mergedccle, DUP == 'TRUE')\n\nwrite.csv (mergedcclepk, file='outputs/TEMP_merged_align_perkinase_ccle.csv')\n\nmergedcclepkTRIM <- as.data.frame (mergedcclepk$Gene)\nmergedcclepkTRIM$Align_Loc <- mergedcclepk$Align_Loc\ncolnames(mergedcclepkTRIM)[1] <- \"Gene\"\n\n\n#MERGE WITH TCGA MUTATION DATA\nTCGA    <- read.csv ( file = 'SOURCE_allTCGA_jan2016.csv')\nTCGA = subset(TCGA, mutation_type == 'Missense_Mutation')\nTCGA$Ref <- str_extract(TCGA$amino_acid_change, \"[A-Z]\")\nTCGA$Codon <- str_extract(TCGA$amino_acid_change, \"[0-9]+\")\n\nmergedtcga <- merge(TCGA, TOP30, by = c('Gene', 'Codon', 'Ref') )\nmergedtcga$pastedref <- paste(mergedtcga$Gene, mergedtcga$Codon, mergedtcga$case_id, sep = \"_\" )\nmergedtcga$DUP= !duplicated(mergedtcga$pastedref)\nmergedtcga <- subset(mergedtcga, DUP == 'TRUE')\n\nwrite.csv (mergedtcga, file='outputs/TEMP_merged_align_tcga.csv')\n\n#look for number of kinases altered per codon\nmergedtcga$pastedref2 <- paste(mergedtcga$Align_Loc, mergedtcga$Gene, sep = \"_\" )\nmergedtcga$DUP= !duplicated(mergedtcga$pastedref2)\nmergedtcgapk <- subset(mergedtcga, DUP == 'TRUE')\n\nwrite.csv (mergedtcgapk, file='outputs/TEMP_merged_align_perkinase_tcga.csv')\n\nmergedtcgapkTRIM <- as.data.frame (mergedtcgapk$Gene)\nmergedtcgapkTRIM$Align_Loc <- mergedtcgapk$Align_Loc\ncolnames(mergedtcgapkTRIM)[1] <- \"Gene\"\n\n\n\nmergedBOTH <- rbind (mergedcclepkTRIM, mergedtcgapkTRIM)\nmergedBOTH$pasted <- paste (mergedBOTH$Gene, mergedBOTH$Align_Loc, sep = \"_\")\nmergedBOTH$DUP= !duplicated(mergedBOTH$pasted)\nmergedBOTH <- subset(mergedBOTH, DUP == 'TRUE')\n\n\nfreq <-table(mergedBOTH$Align_Loc)\nwrite.csv (freq, file ='outputs/TEMP_freq_perkinase_BOTH.csv')\n\n\n#alt conservation score - calculate the score based on most common residue\n\nconserve <- read.csv ( file = 'SOURCE_Top30_rotate.csv')\n\n# first merge each position\nconserve$merge <- paste (conserve$STK11, conserve$MAP2K4, conserve$BMPR2, conserve$ACVR2A, conserve$TSSK1B, conserve$STK32A, conserve$STK24, conserve$CSNK1A1, conserve$MAP3K19, conserve$NEK5, conserve$CSNK1G3, conserve$CHEK2, conserve$MAP3K1, conserve$MAP3K12, conserve$RIPK3, conserve$DYRK3, conserve$NIM1K, conserve$LATS1, conserve$FER, conserve$EPHA5, conserve$CSNK2A1, conserve$TGFBR2, conserve$NEK11, conserve$BRSK1, conserve$EPHA7, conserve$PRKG2, conserve$PAK7, conserve$AMHR2, conserve$GSK3B, conserve$CDKL3, sep = \",\")\nconserve$dash <- str_count(conserve$merge, pattern = \"-\")\nconserve$A <- str_count(conserve$merge, pattern = \"A\")\nconserve$C <- str_count(conserve$merge, pattern = \"C\")\nconserve$D <- str_count(conserve$merge, pattern = \"D\")\nconserve$E <- str_count(conserve$merge, pattern = \"E\")\nconserve$F <- str_count(conserve$merge, pattern = \"F\")\nconserve$G <- str_count(conserve$merge, pattern = \"G\")\nconserve$H <- str_count(conserve$merge, pattern = \"H\")\nconserve$I <- str_count(conserve$merge, pattern = \"I\")\nconserve$K <- str_count(conserve$merge, pattern = \"K\")\nconserve$L <- str_count(conserve$merge, pattern = \"L\")\nconserve$M <- str_count(conserve$merge, pattern = \"M\")\nconserve$N <- str_count(conserve$merge, pattern = \"N\")\nconserve$P <- str_count(conserve$merge, pattern = \"P\")\nconserve$Q <- str_count(conserve$merge, pattern = \"Q\")\nconserve$R <- str_count(conserve$merge, pattern = \"R\")\nconserve$S <- str_count(conserve$merge, pattern = \"S\")\nconserve$T <- str_count(conserve$merge, pattern = \"T\")\nconserve$V <- str_count(conserve$merge, pattern = \"V\")\nconserve$W <- str_count(conserve$merge, pattern = \"W\")\nconserve$Y <- str_count(conserve$merge, pattern = \"Y\")\n\n\nconserve$score <- conserve$A\nconserve$score <- ifelse (conserve$C < conserve$score, conserve$score, conserve$C)\nconserve$score <- ifelse (conserve$D < conserve$score, conserve$score, conserve$D)\nconserve$score <- ifelse (conserve$E < conserve$score, conserve$score, conserve$E)\nconserve$score <- ifelse (conserve$F < conserve$score, conserve$score, conserve$F)\nconserve$score <- ifelse (conserve$G < conserve$score, conserve$score, conserve$G)\nconserve$score <- ifelse (conserve$H < conserve$score, conserve$score, conserve$H)\nconserve$score <- ifelse (conserve$I < conserve$score, conserve$score, conserve$I)\nconserve$score <- ifelse (conserve$K < conserve$score, conserve$score, conserve$K)\nconserve$score <- ifelse (conserve$L < conserve$score, conserve$score, conserve$L)\nconserve$score <- ifelse (conserve$M < conserve$score, conserve$score, conserve$M)\nconserve$score <- ifelse (conserve$N < conserve$score, conserve$score, conserve$N)\nconserve$score <- ifelse (conserve$P < conserve$score, conserve$score, conserve$P)\nconserve$score <- ifelse (conserve$Q < conserve$score, conserve$score, conserve$Q)\nconserve$score <- ifelse (conserve$R < conserve$score, conserve$score, conserve$R)\nconserve$score <- ifelse (conserve$S < conserve$score, conserve$score, conserve$S)\nconserve$score <- ifelse (conserve$T < conserve$score, conserve$score, conserve$T)\nconserve$score <- ifelse (conserve$V < conserve$score, conserve$score, conserve$V)\nconserve$score <- ifelse (conserve$W < conserve$score, conserve$score, conserve$W)\nconserve$score <- ifelse (conserve$Y < conserve$score, conserve$score, conserve$Y)\n\nwrite.csv (conserve, file='outputs/conserved.csv')\n\n#combine scores\n\nfreqBOTH <- read.csv ( file = 'outputs/TEMP_freq_perkinase_BOTH.csv')\ncolnames(freqBOTH)[2] <- \"Align_Loc\"\n\ncomboscore <- merge(freqBOTH, conserve, by = 'Align_Loc' )\nwrite.csv (comboscore, file='outputs/TEMP_comboscore.csv')\n",
    "created" : 1467758651430.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2167832679",
    "id" : "D70256DE",
    "lastKnownWriteTime" : 1470152176,
    "path" : "~/Dropbox/Andy research/KiMoFINAL_holiday/ALT_CONSERVED.R",
    "project_path" : "ALT_CONSERVED.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}